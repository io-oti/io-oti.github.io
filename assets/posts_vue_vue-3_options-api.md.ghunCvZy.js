import{_ as a,c as o,o as t,ak as d}from"./chunks/framework.C836Duf6.js";const u=JSON.parse('{"title":"Options API","description":"","frontmatter":{"author":"Io_oTI","date":"2024-07-12T00:00:00.000Z","publish":false,"tag":"vue","title":"Options API"},"headers":[],"relativePath":"posts/vue/vue-3/options-api.md","filePath":"posts/vue/vue-3/options-api.md","lastUpdated":1742979040000}'),p={name:"posts/vue/vue-3/options-api.md"};function r(s,e,c,i,n,l){return t(),o("div",null,[...e[0]||(e[0]=[d('<p>Vue 组件是通过对象定义的。这些组件对象的属性被称为<em>选项</em>。</p><p>组件可以用两种风格编写。一种风格将组合式 API 与 <code>setup</code> (通过 <code>setup()</code> 选项或 <code>&lt;script setup&gt;</code>) 结合使用。另一种风格几乎不直接使用组合式 API，而是使用各种组件选项来达到类似的效果。以这种方式使用的组件选项被称为选项式 API。</p><p>选项式 API 包括 <code>data()</code>、<code>computed</code>、<code>methods</code> 和 <code>created()</code> 等选项。</p><p>某些选项，例如 <code>props</code>、<code>emits</code> 和 <code>inheritAttrs</code>，可以用于任意一套 API 编写组件。由于它们是组件选项，因此可以被认为是选项式 API 的一部分。但是，由于这些选项也与 <code>setup()</code> 结合使用，因此通常更适合将它们视为两套组件风格之间共享的选项。</p><p><code>setup()</code> 函数本身是一个组件选项，因此它可以被描述为选项式 API 的一部分。但是，这 不是“选项式 API”这个术语的常见用法。相反，<code>setup()</code> 函数被认为是组合式 API 的一部 分。</p><h2 id="状态选项" tabindex="-1">状态选项 <a class="header-anchor" href="#状态选项" aria-label="Permalink to &quot;状态选项&quot;">​</a></h2><p>✍ 敬请期待</p><h2 id="渲染选项" tabindex="-1">渲染选项 <a class="header-anchor" href="#渲染选项" aria-label="Permalink to &quot;渲染选项&quot;">​</a></h2><p>✍ 敬请期待</p><h2 id="生命周期选项" tabindex="-1">生命周期选项 <a class="header-anchor" href="#生命周期选项" aria-label="Permalink to &quot;生命周期选项&quot;">​</a></h2><p>✍ 敬请期待</p><h2 id="组合选项" tabindex="-1">组合选项 <a class="header-anchor" href="#组合选项" aria-label="Permalink to &quot;组合选项&quot;">​</a></h2><p>✍ 敬请期待</p><h2 id="其他杂项" tabindex="-1">其他杂项 <a class="header-anchor" href="#其他杂项" aria-label="Permalink to &quot;其他杂项&quot;">​</a></h2><p>✍ 敬请期待</p><h2 id="组件实例" tabindex="-1">组件实例 <a class="header-anchor" href="#组件实例" aria-label="Permalink to &quot;组件实例&quot;">​</a></h2><p>✍ 敬请期待</p>',17)])])}const _=a(p,[["render",r]]);export{u as __pageData,_ as default};
