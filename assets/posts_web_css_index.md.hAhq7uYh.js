import{_ as e,c as r,o,ak as t}from"./chunks/framework.C836Duf6.js";const u=JSON.parse('{"title":"CSS","description":"","frontmatter":{"author":"Io_oTI","date":"2023-10-26T00:00:00.000Z","publish":false,"tag":"css","title":"CSS"},"headers":[],"relativePath":"posts/web/css/index.md","filePath":"posts/web/css/index.md","lastUpdated":1742979040000}'),i={name:"posts/web/css/index.md"};function s(n,a,l,d,h,c){return o(),r("div",null,[...a[0]||(a[0]=[t('<h2 id="盒子模型-box-model" tabindex="-1"><a href="./box-model">盒子模型（Box Model）</a> <a class="header-anchor" href="#盒子模型-box-model" aria-label="Permalink to &quot;[盒子模型（Box Model）](box-model.md)&quot;">​</a></h2><p>CSS 显示的所有内容都是一个框。因此，了解 CSS Box 模型的工作原理是 CSS 的核心基础。</p><h2 id="选择器-selectors" tabindex="-1"><a href="./selectors">选择器（Selectors）</a> <a class="header-anchor" href="#选择器-selectors" aria-label="Permalink to &quot;[选择器（Selectors）](selectors.md)&quot;">​</a></h2><p>要将 CSS 应用于元素，需要选择它。CSS 提供了许多不同的方法来实现这一点，可以在本模块中探索它们。</p><h2 id="层叠-cascade" tabindex="-1"><a href="./cascade">层叠（Cascade）</a> <a class="header-anchor" href="#层叠-cascade" aria-label="Permalink to &quot;[层叠（Cascade）](cascade.md)&quot;">​</a></h2><p>有时，一个元素可能会应用两条或更多条竞争性 CSS 规则。在此单元中，将了解浏览器如何选择要使用的选项，以及如何控制此项选择。</p><h2 id="优先级-specificity" tabindex="-1"><a href="./specificity">优先级（Specificity）</a> <a class="header-anchor" href="#优先级-specificity" aria-label="Permalink to &quot;[优先级（Specificity）](specificity.md)&quot;">​</a></h2><p>本单元深入探讨了特异性，这是级联的一个关键部分。</p><h2 id="继承-inheritance" tabindex="-1">继承（Inheritance） <a class="header-anchor" href="#继承-inheritance" aria-label="Permalink to &quot;继承（Inheritance）&quot;">​</a></h2><p>如果未为某些 CSS 属性指定值，则系统会继承这些属性。在本单元中，将了解它的工作原理，以及如何充分利用它。</p><h2 id="颜色-color" tabindex="-1">颜色（Color） <a class="header-anchor" href="#颜色-color" aria-label="Permalink to &quot;颜色（Color）&quot;">​</a></h2><p>可以通过多种不同的方式在 CSS 中指定颜色。在本单元中，我们了解最常用的颜色值。</p><h2 id="尺码单位-sizing-units" tabindex="-1">尺码单位（Sizing Units） <a class="header-anchor" href="#尺码单位-sizing-units" aria-label="Permalink to &quot;尺码单位（Sizing Units）&quot;">​</a></h2><p>在本单元中，将了解到如何通过灵活媒介，使用 CSS 调整元素大小。</p><h2 id="布局-layout" tabindex="-1">布局（Layout） <a class="header-anchor" href="#布局-layout" aria-label="Permalink to &quot;布局（Layout）&quot;">​</a></h2><p>简要介绍构建组件或页面布局时必须选择的各种布局方法。</p><h2 id="弹性盒子-flexbox" tabindex="-1">弹性盒子（Flexbox） <a class="header-anchor" href="#弹性盒子-flexbox" aria-label="Permalink to &quot;弹性盒子（Flexbox）&quot;">​</a></h2><p>Flexbox 是一种布局机制，用于在一个维度上排列一组项。在本单元中，将学习如何使用它。</p><h2 id="网格-grid" tabindex="-1">网格（Grid） <a class="header-anchor" href="#网格-grid" aria-label="Permalink to &quot;网格（Grid）&quot;">​</a></h2><p>CSS 网格布局提供了一种二维布局系统，能够控制行和列的布局。在本单元中，将了解网格提供的所有功能。</p><h2 id="逻辑属性-logical-properties" tabindex="-1">逻辑属性（Logical Properties） <a class="header-anchor" href="#逻辑属性-logical-properties" aria-label="Permalink to &quot;逻辑属性（Logical Properties）&quot;">​</a></h2><p>逻辑流程相对属性和值与文本流相关联，而不是与屏幕的物理形状相关联。了解如何利用这种较新的 CSS 方法。</p><h2 id="间距-spacing" tabindex="-1">间距（Spacing） <a class="header-anchor" href="#间距-spacing" aria-label="Permalink to &quot;间距（Spacing）&quot;">​</a></h2><p>考虑使用的布局方法以及需要构建的组件，了解如何选择最佳的元素间距方法。</p><h2 id="伪元素-pseudo-elements" tabindex="-1">伪元素（Pseudo-elements） <a class="header-anchor" href="#伪元素-pseudo-elements" aria-label="Permalink to &quot;伪元素（Pseudo-elements）&quot;">​</a></h2><p>伪元素类似于添加或定位额外的元素，而无需添加更多 HTML。他们有各种不同的角色，可以在本单元中了解这些角色。</p><h2 id="伪类-pseudo-classes" tabindex="-1">伪类（Pseudo-classes） <a class="header-anchor" href="#伪类-pseudo-classes" aria-label="Permalink to &quot;伪类（Pseudo-classes）&quot;">​</a></h2><p>伪类让可以根据状态变化来应用 CSS。这意味着的设计可以对用户输入做出响应，例如无效的电子邮件地址。</p><h2 id="边框-borders" tabindex="-1">边框（Borders） <a class="header-anchor" href="#边框-borders" aria-label="Permalink to &quot;边框（Borders）&quot;">​</a></h2><p>边框可为方框提供一个框架。在此单元中，将了解如何使用 CSS 更改边框的大小、样式和颜色。</p><h2 id="阴影-shadows" tabindex="-1">阴影（Shadows） <a class="header-anchor" href="#阴影-shadows" aria-label="Permalink to &quot;阴影（Shadows）&quot;">​</a></h2><p>可以通过多种方式为 CSS 中的文本和元素添加阴影。在本单元中，将学习如何使用各个选项，以及各个选项的用途。</p><h2 id="焦点-focus" tabindex="-1">焦点（Focus） <a class="header-anchor" href="#焦点-focus" aria-label="Permalink to &quot;焦点（Focus）&quot;">​</a></h2><p>了解焦点在 Web 应用中的重要性。将了解如何管理焦点，以及如何确保使用鼠标的用户和使用键盘进行导航的用户浏览网页的路径。</p><h2 id="z-index-和堆叠上下文-z-index-and-stacking-contents" tabindex="-1">Z-index 和堆叠上下文（Z-index and stacking contents） <a class="header-anchor" href="#z-index-和堆叠上下文-z-index-and-stacking-contents" aria-label="Permalink to &quot;Z-index 和堆叠上下文（Z-index and stacking contents）&quot;">​</a></h2><p>在本单元中，将了解到如何使用 Z-index 和堆叠上下文来控制内容相互叠加的顺序。</p><h2 id="函数-functions" tabindex="-1">函数（Functions） <a class="header-anchor" href="#函数-functions" aria-label="Permalink to &quot;函数（Functions）&quot;">​</a></h2><p>CSS 有一系列内置函数。在本单元中，将了解一些关键功能以及如何使用它们。</p><h2 id="渐变-gradients" tabindex="-1">渐变（Gradients） <a class="header-anchor" href="#渐变-gradients" aria-label="Permalink to &quot;渐变（Gradients）&quot;">​</a></h2><p>在本单元中，将了解如何使用 CSS 中提供的各种渐变类型。渐变可用于创建各种实用效果，而无需使用图形应用创建图片。</p><h2 id="过滤器-filters" tabindex="-1">过滤器（Filters） <a class="header-anchor" href="#过滤器-filters" aria-label="Permalink to &quot;过滤器（Filters）&quot;">​</a></h2><p>CSS 中的滤镜意味着可以应用那些可能仅在图形应用中才想到的效果。在本单元中，将了解有哪些可用功能。</p><h2 id="混合模式-blend-modes" tabindex="-1">混合模式（Blend Modes） <a class="header-anchor" href="#混合模式-blend-modes" aria-label="Permalink to &quot;混合模式（Blend Modes）&quot;">​</a></h2><p>在此模块中，通过混合两个或多个层来创建构图效果，并学习如何在此模块中分离具有白色背景的图片。</p><h2 id="列表-lists" tabindex="-1">列表（Lists） <a class="header-anchor" href="#列表-lists" aria-label="Permalink to &quot;列表（Lists）&quot;">​</a></h2><p>在结构上，列表由填充了列表项的列表容器元素组成。在本单元中，将学习如何设置列表所有部分的样式。</p><h2 id="过渡-transitions" tabindex="-1">过渡（Transitions） <a class="header-anchor" href="#过渡-transitions" aria-label="Permalink to &quot;过渡（Transitions）&quot;">​</a></h2><p>在本单元中，将学习如何定义元素状态之间的过渡。使用过渡效果可为用户互动提供视觉反馈，从而改善用户体验。</p><h2 id="溢出-overflow" tabindex="-1">溢出（Overflow） <a class="header-anchor" href="#溢出-overflow" aria-label="Permalink to &quot;溢出（Overflow）&quot;">​</a></h2><p>“溢出”是指如何处理与设定的父级尺寸不符的内容。在本单元中，将跳出思维局限，了解如何设置溢出内容的样式。</p><h2 id="背景-backgrounds" tabindex="-1">背景（Backgrounds） <a class="header-anchor" href="#背景-backgrounds" aria-label="Permalink to &quot;背景（Backgrounds）&quot;">​</a></h2><p>在本单元中，将学习如何使用 CSS 设置框的背景样式。</p><h2 id="文本和排版-text-and-typography" tabindex="-1">文本和排版（Text and typography） <a class="header-anchor" href="#文本和排版-text-and-typography" aria-label="Permalink to &quot;文本和排版（Text and typography）&quot;">​</a></h2><p>在本单元中，将学习如何设置网页上的文本样式。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://web.developers.google.cn/learn/css" target="_blank" rel="noreferrer">Learn CSS | web.dev for China</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Learn_web_development/Core/Styling_basics" target="_blank" rel="noreferrer">CSS 构建 | MDN</a></li></ul>',56)])])}const b=e(i,[["render",s]]);export{u as __pageData,b as default};
