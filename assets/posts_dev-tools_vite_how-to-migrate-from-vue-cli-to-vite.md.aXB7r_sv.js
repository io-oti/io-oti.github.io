import{_ as s,c as a,o as t,ak as n}from"./chunks/framework.C836Duf6.js";const r=JSON.parse('{"title":"如何从 Vue CLI 迁移到 Vite","description":"","frontmatter":{"author":"Io_oTI","date":"2023-10-16T00:00:00.000Z","publish":true,"tag":"vite","title":"如何从 Vue CLI 迁移到 Vite"},"headers":[],"relativePath":"posts/dev-tools/vite/how-to-migrate-from-vue-cli-to-vite.md","filePath":"posts/dev-tools/vite/how-to-migrate-from-vue-cli-to-vite.md","lastUpdated":1745747014000}'),l={name:"posts/dev-tools/vite/how-to-migrate-from-vue-cli-to-vite.md"};function e(h,i,p,k,c,d){return t(),a("div",null,[...i[0]||(i[0]=[n(`<p>如果你在 2021 年之前一直在使用 Vue 进行开发，那么你选择的构建工具很有可能是 Vue CLI。一段时间以来，它一直是脚手架 Vue.js 项目的事实标准。不过现在，Evan You 的下一代构建工具 Vite 已经引起了很多关注，是 Vue CLI 的绝佳替代品。</p><h2 id="为什么要从-vue-cli-迁移到-vite" tabindex="-1">为什么要从 Vue CLI 迁移到 Vite？ <a class="header-anchor" href="#为什么要从-vue-cli-迁移到-vite" aria-label="Permalink to &quot;为什么要从 Vue CLI 迁移到 Vite？&quot;">​</a></h2><p>采取行动的主要原因是速度。Vite 的开发服务器速度很快。因为它对 JavaScript 模块使用本机浏览器支持，所以服务器启动时间是即时的。这种方法还意味着，无论应用程序的大小如何，热模块更换都保持快速，因为不必重建整个捆绑包。</p><p>为了演示，这里有一个全新的 Vue CLI 项目的基准测试，与使用 Vite 的完全相同的项目相比。</p><ul><li>启动时间: <ul><li>Vue CLI - 2591ms（超过 2 秒）</li><li>Vite - 259ms（远低于半秒 - 快 10 倍） ⚡️</li></ul></li><li>热模块替换 (HMR): <ul><li>Vue CLI - 171ms</li><li>Vite - 不是由 Vite 打印到控制台，而是从观察中打印出来...基本上是即时的</li></ul></li></ul><p>请记住，这只是脚手架样板。随着项目的增长，Vue CLI 版本只会逐渐变慢，而 Vite 承诺无论你的项目规模如何，都能以相同的水平执行。</p><h2 id="如何从-vue-cli-迁移到-vite" tabindex="-1">如何从 Vue CLI 迁移到 Vite？ <a class="header-anchor" href="#如何从-vue-cli-迁移到-vite" aria-label="Permalink to &quot;如何从 Vue CLI 迁移到 Vite？&quot;">​</a></h2><p>所以你确信 Vite 适合你，那么如何将你的项目从使用 Vue CLI 迁移到 Vite？</p><p>为了回答这个问题，我用 Vue CLI 构建了一个全新的项目，我将与你一起完成将其转换为 Vite 的步骤。当然，你通常不会从一个全新的 Vue CLI 项目开始，但其中许多步骤对于你建立的项目是相同的。</p><p>另外，我选择从 Vue 2 代码库工作，因为你们中的大多数人可能已经建立了完善的代码库仍在 Vue 2 上运行。但是，我也在下面的过程中做了笔记，Vue 3 的情况会有所不同。</p><p>最后，如果你不想和我一起完成整个过程，你可以在此示例存储库中看到更改的差异。</p><h3 id="步骤-1-更新依赖项" tabindex="-1">步骤 1：更新依赖项 <a class="header-anchor" href="#步骤-1-更新依赖项" aria-label="Permalink to &quot;步骤 1：更新依赖项&quot;">​</a></h3><p>迁移到 Vite 的第一步是更新 package.json 中的依赖项。我们需要删除与 Vue CLI 相关的依赖项。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;@vue/cli-plugin-babel&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;~4.5.0&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">, </span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// remove</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;@vue/cli-plugin-eslint&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;~4.5.0&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">, </span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// remove</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;@vue/cli-plugin-router&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;~4.5.0&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">, </span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// remove</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;@vue/cli-plugin-vuex&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;~4.5.0&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">, </span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// remove</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;@vue/cli-service&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;~4.5.0&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">, </span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// remove</span></span></code></pre></div><p>我们还可以删除 sass-loader，因为 Vite 为最常见的预处理器提供了开箱即用的内置支持。这将使我们能够继续使用我们选择的 CSS 预处理器。请注意，Vite 建议将原生 CSS 变量与 PostCSS 插件一起使用，这些插件可以实现 CSSWG 草稿并编写简单的、符合未来标准的 CSS。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;sass-loader&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;^8.0.2&quot;</span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;"> // remove</span></span></code></pre></div><p>最后，我们将添加 Vite 作为依赖项，以及 Vite 的 Vue 插件组件，以支持单文件组件。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;@vitejs/plugin-vue&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;^1.6.1&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;vite&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;^2.5.4&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">,</span></span></code></pre></div><p>此外，由于我们正在迁移 Vue 2 项目，除了官方的 Vue 插件之外，我们还需要包含社区维护的 Vue 2 插件。如果我们使用 Vue 3，那就没有必要了。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;vite-plugin-vue2&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> : </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;1.9.0&quot;</span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;"> // add for Vue 2</span></span></code></pre></div><p>安装 Vite 插件后，我们现在还可以删除 vue 模板编译器，因为它由 Vite Vue 插件处理。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;vue-template-compiler&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;^2.6.11&quot;</span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;"> //remove (SFC support provided by vite vue plugin)</span></span></code></pre></div><h3 id="步骤-2-仅为现代浏览器提供支持" tabindex="-1">步骤 2：仅为现代浏览器提供支持 <a class="header-anchor" href="#步骤-2-仅为现代浏览器提供支持" aria-label="Permalink to &quot;步骤 2：仅为现代浏览器提供支持&quot;">​</a></h3><p>由于 Vite 是下一代构建工具，让我们乐观地继续只支持最现代的浏览器。这将使我们的构建尽可能精简和快速。</p><p>实际上，这意味着我们可以从依赖项中完全删除 Babel，因为大多数移动和桌面常青浏览器几乎完全支持所有 ES6 功能。如果你仍然需要支持像 Internet Explorer 11 这样的旧浏览器，Vite 确实为此提供了一个官方插件。</p><p>因此，要删除 Babel，首先我们将删除 babel.config.js 该文件。</p><p>接下来，由于我们已经删除了需要 babel 本身的 @vue/cli-plugin-babel 依赖项，我们只需要从 package.json 中删除其他几个与 babel 相关的依赖项。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;babel-eslint&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;^10.1.0&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">, </span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// remove</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;core-js&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;^3.6.5&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">, </span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// remove</span></span></code></pre></div><p>现在删除后 babel-eslint ，我们需要将其作为解析器从我们的 .eslintrc 文件中删除。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// .eslintrc</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// remove</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">parserOptions: </span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">{</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">    parser</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">:</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &quot;babel-eslint&quot;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">,</span></span></code></pre></div><p>注意：如果你的项目中没有 linting/format 设置，你可以跳到下一步，但我强烈建议你添加它，如果你还没有它。这是一个很好的教程，可以在你的 Vite 驱动的 Vue 项目上设置它。</p><p>最后，当我们进入 .eslintrc 时，我们需要添加环境 es2022，因为该项目的 src 现在完全位于 ES 模块土地上。你也可以保留节点环境，因为某些配置文件仍在节点环境中运行。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// .eslintrc</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">env: </span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">{</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">    node</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">:</span><span style="--shiki-light:#FE640B;--shiki-dark:#FAB387;"> true</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">    es2022</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">:</span><span style="--shiki-light:#FE640B;--shiki-dark:#FAB387;"> true</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;"> // 👈 add this</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span></span></code></pre></div><p>此更改还将迫使我们自行更新 eslint ，以及 eslint-plugin-vue 支持 es2021 环境。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">npm</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> install</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> eslint@8</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> eslint-plugin-vue@8</span></span></code></pre></div><h3 id="步骤-3-添加-vite-配置" tabindex="-1">步骤 3：添加 Vite 配置 <a class="header-anchor" href="#步骤-3-添加-vite-配置" aria-label="Permalink to &quot;步骤 3：添加 Vite 配置&quot;">​</a></h3><p>在此步骤中，让我们为 Vue.js 项目配置 Vite。Vite 是通过项目根目录中的文件配置 vite.config.js 的。这是使用 为 npm init vite@latest Vue 生成全新 Vite 项目时的默认 vite.config.js 文件的样子。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// vite.config.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">import</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> defineConfig </span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> from</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;vite&#39;</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">import</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> vue </span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">from</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;@vitejs/plugin-vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// https://vitejs.dev/config/</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">export</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> default</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;"> defineConfig</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">{</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">  plugins</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> [</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">vue</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">()]</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">)</span></span></code></pre></div><p>我们想再添加 2 件事。</p><p>首先，我们将从 vite-plugin-vue2 Vue 插件导入，而不是官方的 Vite Vue 插件。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// vite.config.js</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">import</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> vue </span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">from</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;@vitejs/plugin-vue&#39;</span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;"> // remove</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">import</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> createVuePlugin </span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">as</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> vue </span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> from</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;vite-plugin-vue2&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">//...</span></span></code></pre></div><p>当然，如果你使用的是 Vue 3，你不必这样做。</p><p>其次，为了使 @ 导入别名像使用 Vue CLI 一样工作，我们需要添加这个位。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// vite.config.js</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">//...</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">const</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> path </span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">=</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;"> require</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&#39;path&#39;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">)</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">export</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> default</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;"> defineConfig</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">{</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">  //...</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">  resolve</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">    alias</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">      &#39;@&#39;</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> path</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">resolve</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(</span><span style="--shiki-light:#E64553;--shiki-dark:#EBA0AC;">__dirname</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;./src&#39;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">)</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">    },</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">  },</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">)</span></span></code></pre></div><h3 id="步骤-4-移动-index-html" tabindex="-1">步骤 4：移动 index.html <a class="header-anchor" href="#步骤-4-移动-index-html" aria-label="Permalink to &quot;步骤 4：移动 index.html&quot;">​</a></h3><p>与 Vue CLI 相反，Vite 实际上将保存 Vue.js 应用程序的索引.html 文件放在项目的根目录中而不是公共目录中，因此你需要移动它。</p><p>同样在索引中.html 你需要进行一些更改。</p><p>首先， &lt;%= htmlWebpackPlugin.options.title %&gt; 我们将占位符的实例更改为硬编码值。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">// index.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">&lt;!--remove--&gt;</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">title</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&gt;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">&lt;%= htmlWebpackPlugin.options.title %&gt;</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;/</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">title</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">&lt;!--add--&gt;</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">title</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&gt;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">Hard Coded Title</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;/</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">title</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">//...</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">&lt;!--remove--&gt;</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">strong</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">  &gt;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">We&#39;re sorry but &lt;%= htmlWebpackPlugin.options.title %&gt; doesn&#39;t work properly</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">  without JavaScript enabled. Please enable it to continue.</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;/</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">strong</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">&lt;!--add--&gt;</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">strong</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">  &gt;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">We&#39;re sorry but this app doesn&#39;t work properly without JavaScript enabled.</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">  Please enable it to continue.</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;/</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">strong</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&gt;</span></span></code></pre></div><p>我们还需要将 &lt;%= BASE_URL %&gt; 占位符替换为绝对路径。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">// index.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">&lt;!--remove--&gt;</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">link</span><span style="--shiki-light:#DF8E1D;--shiki-dark:#F9E2AF;"> rel</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">=</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;icon&quot;</span><span style="--shiki-light:#DF8E1D;--shiki-dark:#F9E2AF;"> href</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">=</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;&lt;%= BASE_URL %&gt;favicon.ico&quot;</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">&lt;!--add--&gt;</span></span>
<span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">link</span><span style="--shiki-light:#DF8E1D;--shiki-dark:#F9E2AF;"> rel</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">=</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;icon&quot;</span><span style="--shiki-light:#DF8E1D;--shiki-dark:#F9E2AF;"> href</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">=</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;/favicon.ico&quot;</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;"> /&gt;</span></span></code></pre></div><p>最后也是最重要的一点，JavaScript 应用程序不再是自动注入的，所以我们需要像这样包含它：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&lt;</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">script</span><span style="--shiki-light:#DF8E1D;--shiki-dark:#F9E2AF;"> type</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">=</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;module&quot;</span><span style="--shiki-light:#DF8E1D;--shiki-dark:#F9E2AF;"> src</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">=</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;/src/main.js&quot;</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&gt;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">&lt;</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">/</span><span style="--shiki-light:#1E66F5;--shiki-dark:#89B4FA;">script</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">&gt;</span></span></code></pre></div><h3 id="步骤-5-更新脚本" tabindex="-1">步骤 5：更新脚本 <a class="header-anchor" href="#步骤-5-更新脚本" aria-label="Permalink to &quot;步骤 5：更新脚本&quot;">​</a></h3><p>回到 package.json，我们还需要更新脚本。我们将旧 vue-cli-service 命令更改为 Vite 特定命令。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;serve&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;vue-cli-service serve&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">, </span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// remove</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;build&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;vue-cli-service build&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">, </span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// remove</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;dev&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;vite&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;build&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;vite build&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">,</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;serve&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;vite preview&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">,</span></span></code></pre></div><p>请注意，启动开发服务器的命令不再是 serve 。Vite 改为使用 dev ， serve 用于在本地预览生产版本。</p><p>此外，如果你启用了 linting，则应更新 lint 脚本以直接运行 eslint。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;lint&quot;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">: </span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&quot;eslint --ext .js,.vue --ignore-path .gitignore --fix src&quot;</span></span></code></pre></div><h3 id="步骤-6-更新环境变量" tabindex="-1">步骤 6：更新环境变量 <a class="header-anchor" href="#步骤-6-更新环境变量" aria-label="Permalink to &quot;步骤 6：更新环境变量&quot;">​</a></h3><p>环境变量在 Vite 中的工作方式与它们在 Vue CLI 中的工作方式之间存在很多交叉。例如，你的 .env 命名约定可以保持不变。</p><div class="language-dotenv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dotenv</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">.env                # loaded in all cases</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">.env.local          # loaded in all cases, ignored by git</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">.env.[mode]         # only loaded in specified mode</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">.env.[mode].local   # only loaded in specified mode, ignored by git</span></span></code></pre></div><p>但是，你无法再访问变量上的环境 process 变量。相反，可以在 上 import.meta.env 找到它们。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// router/index.js</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">base</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">:</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> process</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">env</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#FE640B;--shiki-dark:#FAB387;">BASE_URL</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;"> //remove</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">base</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">:</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> import</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">meta</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">env</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">.</span><span style="--shiki-light:#FE640B;--shiki-dark:#FAB387;">BASE_URL</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span></code></pre></div><p>此外，用于使声明客户端公开的 env 变量更明显的 VUE<em>APP</em> 前缀更改为 ，因此如果你有任何此类环境变量 VITE_ ，则必须相应地更新它们。</p><h3 id="步骤-7-将-vue-扩展名添加到-sfc-导入" tabindex="-1">步骤 7：将 .vue 扩展名添加到 SFC 导入 <a class="header-anchor" href="#步骤-7-将-vue-扩展名添加到-sfc-导入" aria-label="Permalink to &quot;步骤 7：将 .vue 扩展名添加到 SFC 导入&quot;">​</a></h3><p>虽然我们新创建的 Vue CLI 项目已经这样做了，但我敢打赌你现有的应用程序可能不会这样做。因此，必须确保单个文件组件的所有导入都以 .vue 扩展名结尾。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// Home.vue</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">import</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> HelloWorld </span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">from</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;@/components/HelloWorld.vue&#39;</span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;"> // .vue is required</span></span></code></pre></div><p>如果此过程由于代码库的大小而过于压倒性，则可以配置 vite，以便不需要这样做。这是通过添加到 .vue 中的 resolve.extensions vite.config.js 配置选项来实现的。确保还手动包含所有默认扩展名，因为此选项会覆盖默认值。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// vite.config.js</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">//...</span></span>
<span class="line"><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;">export</span><span style="--shiki-light:#8839EF;--shiki-dark:#CBA6F7;"> default</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;"> defineConfig</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">{</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">  plugins</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> [</span><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">vue</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">()]</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">  resolve</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;"> {</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">    extensions</span><span style="--shiki-light:#179299;--shiki-dark:#94E2D5;">:</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;"> [</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">&#39;.mjs&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;.js&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;.ts&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;.jsx&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;.tsx&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;.json&#39;</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;"> &#39;.vue&#39;</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">]</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">    //...</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">  },</span></span>
<span class="line"><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">}</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">)</span></span></code></pre></div><p>虽然这有效，但如果可能的话，应该避免。为什么？因为根据 Vite 文档：“请注意，不建议省略自定义导入类型的扩展（例如 .vue ），因为它会干扰 IDE 和类型支持。</p><h3 id="步骤-8-清理魔术注释" tabindex="-1">步骤 8：清理魔术注释 <a class="header-anchor" href="#步骤-8-清理魔术注释" aria-label="Permalink to &quot;步骤 8：清理魔术注释&quot;">​</a></h3><p>最后，你可以删除所有用于命名动态导入的魔术注释，因为这些是特定于 webpack 的注释，对 Vite 没有任何意义。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes catppuccin-latte catppuccin-mocha vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">// router/index.js</span></span>
<span class="line"><span style="--shiki-light:#1E66F5;--shiki-light-font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">(</span></span>
<span class="line"><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">    /* webpackChunkName: &quot;about&quot; */</span><span style="--shiki-light:#9CA0B0;--shiki-light-font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic;">  // remove</span></span>
<span class="line"><span style="--shiki-light:#40A02B;--shiki-dark:#A6E3A1;">    &quot;../views/About.vue&quot;</span></span>
<span class="line"><span style="--shiki-light:#4C4F69;--shiki-dark:#CDD6F4;">)</span><span style="--shiki-light:#7C7F93;--shiki-dark:#9399B2;">,</span></span></code></pre></div><p>相反，Vite 将根据原始 .vue 文件名和缓存破坏哈希自动命名你的块，如下所示： About.37a9fa9f.js</p><h3 id="步骤-9-享受更快-更无缝的开发体验" tabindex="-1">步骤 9：享受更快，更无缝的开发体验 <a class="header-anchor" href="#步骤-9-享受更快-更无缝的开发体验" aria-label="Permalink to &quot;步骤 9：享受更快，更无缝的开发体验&quot;">​</a></h3><p>完成上述步骤 1-8 后，你的应用程序应该已准备好开始使用 Vite 运行！继续启动你的开发服务器 npm run dev ，看看 Vite 对自己来说有多快。</p><p>如果此时弹出任何其他错误，请在下面发表评论并与社区分享，以及你可能拥有的任何解决方案！</p><p>最后，请记住，在此示例存储库中，可以将所有这些更改视为差异，以帮助进行迁移。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://vueschool.io/articles/vuejs-tutorials/how-to-migrate-from-vue-cli-to-vite/" target="_blank" rel="noreferrer">How to Migrate from Vue CLI to Vite</a></p>`,81)])])}const g=s(l,[["render",e]]);export{r as __pageData,g as default};
